#lang racket
(require graphics/turtles)
(turtles)

(define (carre n)
  (clear)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  )

(define (triangle n)
  (clear)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  )
(define (forme n)
    (if (<= n 1)
        (draw n)
        (begin
          (forme (/ n 3))
          (turn 60)
          (forme (/ n 3))
          (turn -120)
          (forme (/ n 3))
          (turn 60)
          (forme (/ n 3))
          )
    ))

(define (forme2 n rlevel)
    (if (<= rlevel 0)
        (draw n)
        (begin
          (forme2 (/ n 3) (- rlevel 1))
          (turn 60)
          (forme2 (/ n 3) (- rlevel 1))
          (turn -120)
          (forme2 (/ n 3) (- rlevel 1))
          (turn 60)
          (forme2 (/ n 3) (- rlevel 1))
          )
    ))
(define (flocon size rlevel )
      (forme2 size rlevel)
      (turn -120)
      (forme2 size rlevel)
      (turn -120)
      (forme2 size rlevel)
  )
;(move -200)
;(flocon 150 100)

(define (arbrep n rlevel)
  (turn 90)
  (draw n)
  (turn 30)
  (draw n)
  (turn 180)
  (move n)
  (turn 120)
  (draw n)
  (turn 180)
  (move n)
  (turn 30)
  (move n)
  (turn 180)
  )


(define (arbre n)
  (if (<= n 1)
      (begin (turn 90)
      (draw n))
  (begin (turn 90)
  (arbre (/ n 2))
  (turn 30)
  (arbre (/ n 2))
  (turn 180)
  (move n)
  (turn 120)
  (arbre (/ n 2))
  ; ajout
  (turn 180)
  (move n)
  (turn 30)
  (move n)
  (turn 180)
  )
  
  )
  )

(define (rt n)
  (turn 60)
  (draw n)
  (turn -120)
  (draw n)
  (turn 240)
  (draw n)
  (turn 180)
  (draw n))
  ;(rt 14)

(define (rt2 s)
  (draw s)
  (turn 120)
  (draw s)
  (turn 120)
  (draw s)
  (turn 120)
  )


(define (sierpinski size rlevel)
  (if (zero? rlevel)
      (rt2 size)
      (begin
        (sierpinski (/ size 2) (- rlevel 1))
        (move (/ size 2))
        (sierpinski (/ size 2) (- rlevel 1))
        (turn 120)
        (move (/ size 2))
        (turn -120)
        (sierpinski (/ size 2) (- rlevel 1))
        (turn -120)
        (move (/ size 2))
        (turn 120)
        )
      ))
(sierpinski 100 1)
(define (rtriangle n rlevel)
  (if (= rlevel 0) (rt n)
      (begin
        (rtriangle (/ n 2) (- rlevel 1))
        (move (/ n 2))
        (rtriangle (/ n 2) (- rlevel 1))
        (turn 120)
        (move (/ n 2))
        (turn -120)
        (rtriangle (/ n 2) (- rlevel 1))
        (turn -120)
        (move (/ n 2))
        (turn 120)
        ;(rtriangle (/ n 2) (- rlevel 1))
        ;(draw (/ n 2))
        )
      ))
;(rtriangle 150 2)
;(arbrep 150)