#lang racket
(require graphics/turtles)
(turtles)

(define (carre n)
  (clear)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  )

(define (triangle n)
  (clear)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  (turn 90)
  (draw n)
  )
(define (forme n)
    (if (<= n 1)
        (draw n)
        (begin
          (forme (/ n 3))
          (turn 60)
          (forme (/ n 3))
          (turn -120)
          (forme (/ n 3))
          (turn 60)
          (forme (/ n 3))
          )
    ))

(define (forme2 n rlevel)
    (if (<= n 1)
        (draw n)
        (begin
          (forme2 (/ n 3) (- rlevel 1))
          (turn 60)
          (forme2 (/ n 3) (- rlevel 1))
          (turn -120)
          (forme2 (/ n 3) (- rlevel 1))
          (turn 60)
          (forme2 (/ n 3) (- rlevel 1))
          )
    ))
(define (flocon size rlevel )
      (forme2 size rlevel)
      (turn -120)
      (forme2 size rlevel)
      (turn -120)
      (forme2 size rlevel)
  )
;(move -200)
;(flocon 150 100)

(define (arbrep n)
  (turn 90)
  (draw n)
  (turn 30)
  (draw n)
  (turn 180)
  (move n)
  (turn 120)
  (draw n)
  (turn 180)
  (move n)
  (turn 30)
  (move n)
  (turn 180)
  )


(define (arbre n)
  (if (<= n 1)
      (begin (turn 90)
      (draw n))
  (begin (turn 90)
  (arbre (/ n 2))
  (turn 30)
  (arbre (/ n 2))
  (turn 180)
  (move n)
  (turn 120)
  (arbre (/ n 2))
  ; ajout
  (turn 180)
  (move n)
  (turn 30)
  (move n)
  (turn 180)
  )
  
  )
  )

(arbrep 50)